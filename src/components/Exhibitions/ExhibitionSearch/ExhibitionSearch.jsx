import React, { useState, useEffect, useCallback } from "react";
import styles from "./ExhibitionSearch.module.css";

const ExhibitionSearch = ({ searchTerm, onSearchChange }) => {
  const [localSearchTerm, setLocalSearchTerm] = useState(searchTerm || "");

  // Debounce —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –∑–∞–ø–∏—Ç—ñ–≤
  const debounce = useCallback((func, delay) => {
    let timeoutId;
    return (...args) => {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => func.apply(null, args), delay);
    };
  }, []);

  // –î–µ–±–∞—É–Ω—Å–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ –ø–æ—à—É–∫–æ–≤–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω—É
  const debouncedSearchChange = useCallback(
    debounce((value) => {
      onSearchChange(value);
    }, 300),
    [onSearchChange, debounce]
  );

  // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –ø–æ–ª—ñ –ø–æ—à—É–∫—É
  const handleInputChange = (e) => {
    const value = e.target.value;
    setLocalSearchTerm(value);
    debouncedSearchChange(value);
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–æ—à—É–∫—É
  const handleClearSearch = () => {
    setLocalSearchTerm("");
    onSearchChange("");
  };

  // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ–º searchTerm
  useEffect(() => {
    setLocalSearchTerm(searchTerm || "");
  }, [searchTerm]);

  return (
    <div className={styles.searchContainer}>
      <h3 className={styles.componentTitle}>–ü–æ—à—É–∫ –≤–∏—Å—Ç–∞–≤–æ–∫</h3>

      <div className={styles.searchPanel}>
        <div className={styles.searchInputWrapper}>
          <input
            type="text"
            placeholder="üîé –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∞–±–æ –æ–ø–∏—Å –≤–∏—Å—Ç–∞–≤–∫–∏..."
            value={localSearchTerm}
            onChange={handleInputChange}
            className={styles.searchInput}
          />

          {localSearchTerm && (
            <button
              onClick={handleClearSearch}
              className={styles.clearButton}
              type="button"
              aria-label="–û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ—à—É–∫"
            ></button>
          )}
        </div>

        {localSearchTerm && (
          <div className={styles.searchInfo}>
            –ü–æ—à—É–∫ –∑–∞ –∑–∞–ø–∏—Ç–æ–º: "{localSearchTerm}"
          </div>
        )}
      </div>
    </div>
  );
};

export default ExhibitionSearch;
