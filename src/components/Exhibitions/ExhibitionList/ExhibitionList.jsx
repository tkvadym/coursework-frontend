import React from "react";
import ExhibitionCard from "../ExhibitionCard";
import LoadingSpinner from "../../LoadingSpinner";
import styles from "./ExhibitionList.module.css";

const ExhibitionList = ({
  exhibitions = [],
  sortBy = "date-desc",
  onSortChange,
  loading = false,
  error = null,
}) => {
  // –û–±—Ä–æ–±–∫–∞ —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  if (loading) {
    return (
      <div className={styles.listContainer}>
        <div className={styles.listHeader}>
          <h3 className={styles.componentTitle}>–°–ø–∏—Å–æ–∫ –≤–∏—Å—Ç–∞–≤–æ–∫</h3>
        </div>
        <LoadingSpinner message="–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∏—Å—Ç–∞–≤–æ–∫..." />
      </div>
    );
  }

  // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
  if (error) {
    return (
      <div className={styles.listContainer}>
        <div className={styles.listHeader}>
          <h3 className={styles.componentTitle}>–°–ø–∏—Å–æ–∫ –≤–∏—Å—Ç–∞–≤–æ–∫</h3>
        </div>
        <div className={styles.errorContainer}>
          <div className={styles.errorIcon}>‚ö†Ô∏è</div>
          <h4 className={styles.errorTitle}>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h4>
          <p className={styles.errorMessage}>{error}</p>
          <button
            className={styles.retryButton}
            onClick={() => window.location.reload()}
          >
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.listContainer}>
      <div className={styles.listHeader}>
        <h3 className={styles.componentTitle}>–°–ø–∏—Å–æ–∫ –≤–∏—Å—Ç–∞–≤–æ–∫</h3>
        <div className={styles.sortContainer}>
          <label className={styles.sortLabel}>–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è:</label>
          <select
            value={sortBy}
            onChange={(e) => onSortChange && onSortChange(e.target.value)}
            className={styles.sortSelect}
            disabled={loading}
          >
            <option value="date-desc">–ó–∞ –¥–∞—Ç–æ—é (–Ω–æ–≤—ñ —Å–ø–æ—á–∞—Ç–∫—É)</option>
            <option value="date-asc">–ó–∞ –¥–∞—Ç–æ—é (—Å—Ç–∞—Ä—ñ —Å–ø–æ—á–∞—Ç–∫—É)</option>
            <option value="name-asc">–ó–∞ –Ω–∞–∑–≤–æ—é (–ê-–Ø)</option>
            <option value="name-desc">–ó–∞ –Ω–∞–∑–≤–æ—é (–Ø-–ê)</option>
          </select>
        </div>
      </div>

      {/* –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–∏—Å—Ç–∞–≤–æ–∫ */}
      {!loading && !error && (
        <div className={styles.resultsInfo}>
          –ó–Ω–∞–π–¥–µ–Ω–æ –≤–∏—Å—Ç–∞–≤–æ–∫: {exhibitions.length}
        </div>
      )}

      {/* –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤–∏—Å—Ç–∞–≤–æ–∫ –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å */}
      {!loading && !error && exhibitions.length === 0 ? (
        <div className={styles.emptyContainer}>
          <div className={styles.emptyIcon}>üé®</div>
          <h4 className={styles.emptyTitle}>–í–∏—Å—Ç–∞–≤–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ</h4>
          <p className={styles.emptyMessage}>
            –ù–∞ –∂–∞–ª—å, –∑–∞ –≤–∞—à–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏ –ø–æ—à—É–∫—É –≤–∏—Å—Ç–∞–≤–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ
            –∑–º—ñ–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç.
          </p>
        </div>
      ) : !loading && !error ? (
        <div className={styles.exhibitionGrid}>
          {exhibitions.map((exhibition) => (
            <ExhibitionCard
              key={exhibition.id}
              id={exhibition.id}
              title={exhibition.title}
              description={exhibition.description}
              startDate={exhibition.startDate}
              endDate={exhibition.endDate}
              category={exhibition.category}
              image={exhibition.image}
              organizer={exhibition.organizer}
            />
          ))}
        </div>
      ) : null}
    </div>
  );
};

export default ExhibitionList;
